{"entries":[{"timestamp":1746365346916,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"/**\n *Obloq implementation method.\n */\n//% weight=10 color=#096670 icon=\"\\uf1eb\" block=\"Obloq_http\"\n//% groups=[\"04_IFTTT\",\"03_ThingSpeak\", \"02_Weather\", \"01_System\"]\nnamespace Obloq_http {\n\n    let wInfo: string[][] = [\n        [\"weather\", \"main\", \"\", \"s\"],\n        [\"description\", \"description\", \"\", \"s\"],\n        [\"temperature\", \"\\\"temp\\\"\", \"\", \"k\"],\n        [\"humidity\", \"dity\", \"\", \"n\"],\n        [\"temp_min\", \"temp_min\", \"\", \"k\"],\n        [\"temp_max\", \"temp_max\", \"\", \"k\"],\n        [\"speed\", \"speed\", \"\", \"n\"],\n        [\"sunrise\", \"sunrise\", \"\", \"n\"],\n        [\"sunset\", \"sunset\", \"\", \"n\"],\n        [\"timezone\", \"timezone\", \"\", \"n\"],\n        [\"cityName\", \"name\", \"\", \"s\"]\n    ]\n\n    export enum wType {\n        //% block=\"city name\"\n        cityName = 10,\n        //% block=\"weather\"\n        weather = 0,\n        //% block=\"description\"\n        description = 1,\n        //% block=\"temperature\"\n        temperature = 2,\n        //% block=\"humidity\"\n        humidity = 3,\n        //% block=\"low temperature\"\n        temp_min = 4,\n        //% block=\"maximum temperature\"\n        temp_max = 5,\n        //% block=\"wind speed\"\n        speed = 6,\n        //% block=\"time of sunrise\"\n        sunrise = 7,\n        //% block=\"time of sunset\"\n        sunset = 8\n    }\n\n    //serial\n    let OBLOQ_SERIAL_INIT = false\n    let OBLOQ_WIFI_CONNECTED = false\n    let OBLOQ_SERIAL_TX = SerialPin.P2\n    let OBLOQ_SERIAL_RX = SerialPin.P1\n    let OBLOQ_WIFI_SSID = \"\"\n    let OBLOQ_WIFI_PASSWORD = \"\"\n    let OBLOQ_IP = \"\"\n    let cityID = \"\"\n    let weatherKey = \"\"\n    let aa = 0\n\n    export enum cityIDs {\n        //% block=\"Taipei\"\n        Taipei = 1668341,\n        //% block=\"Hong Kong\"\n        HongKong = 1819729,\n        //% block=\"Tokyo\"\n        Tokyo = 1850147,\n        //% block=\"Seoul\"\n        Seoul = 1835848,\n        //% block=\"Beijing\"\n        Beijing = 1816670,\n        //% block=\"Shanghai\"\n        Shanghai = 1796236,\n        //% block=\"Singapore\"\n        Singapore = 1880252,\n        //% block=\"London\"\n        London = 2643743,\n        //% block=\"Berlin\"\n        Berlin = 2950159,\n        //% block=\"Paris\"\n        Paris = 2988507,\n        //% block=\"New York\"\n        NewYork = 5128638,\n        //% block=\"Sydney\"\n        Sydney = 2147714\n    }\n\n    export enum city2IDs {\n        //% block=\"Keelung\"\n        Keelung = 6724654,\n        //% block=\"Taipei\"\n        Taipei = 1668341,\n        //% block=\"Xinbei\"\n        Xinbei = 1670029,\n        //% block=\"Taoyuan\"\n        Taoyuan = 1667905,\n        //% block=\"Hsinchu\"\n        Hsinchu = 1675107,\n        //% block=\"Miaoli\"\n        Miaoli = 1671971,\n        //% block=\"Taichung\"\n        Taichung = 1668399,\n        //% block=\"Changhua\"\n        Changhua = 1679136,\n        //% block=\"Nantou\"\n        Nantou = 1671564,\n        //% block=\"Yunlin\"\n        Yunlin = 1665194,\n        //% block=\"Jiayi\"\n        Jiayi = 1678836,\n        //% block=\"Tainan\"\n        Tainan = 1668352,\n        //% block=\"Kaohsiung\"\n        Kaohsiung = 7280289,\n        //% block=\"Pingtung\"\n        Pingtung = 1670479,\n        //% block=\"Yilan\"\n        Yilan = 1674197,\n        //% block=\"Hualien\"\n        Hualien = 1674502,\n        //% block=\"Taitung\"\n        Taitung = 1668295,\n        //% block=\"Penghu\"\n        Penghu = 1670651,\n        //% block=\"Jincheng\"\n        Jincheng = 1678008,\n        //% block=\"Nangan\"\n        Nangan = 7552914\n    }\n\n    function obloqWriteString(text: string): void {\n        serial.writeString(text)\n    }\n\n    /*\n    function startWork():void{\n        basic.clearScreen()\n        led.plot(1, 2)\n        led.plot(2, 2)\n        led.plot(3, 2)\n    }\n    */\n\n    function Obloq_serial_init(): void {\n        obloqWriteString(\"123\")\n        let item = serial.readString()\n        item = serial.readString()\n        item = serial.readString()\n        serial.redirect(\n            OBLOQ_SERIAL_TX,\n            OBLOQ_SERIAL_RX,\n            BaudRate.BaudRate9600\n        )\n        serial.setRxBufferSize(200)\n        serial.setTxBufferSize(100)\n        obloqWriteString(\"\\r\")\n        item = serial.readString()\n        obloqWriteString(\"|1|1|\\r\")\n        item = serial.readUntil(\"\\r\")\n        item = serial.readString()\n        item = serial.readString()\n        item = serial.readString()\n        item = serial.readString()\n        OBLOQ_SERIAL_INIT = true\n    }\n\n    function getTimeStr(myTimes: number): string {\n        let myTimeStr = \"\"\n        let secs = myTimes % 60\n        let mins = Math.trunc(myTimes / 60)\n        let hours = Math.trunc(mins / 60)\n        mins = mins % 60\n        hours = hours % 24\n        if (hours < 10)\n            myTimeStr = \"0\" + hours\n        else\n            myTimeStr = \"\" + hours\n        myTimeStr += \":\"\n        if (mins < 10)\n            myTimeStr = myTimeStr + \"0\" + mins\n        else\n            myTimeStr = myTimeStr + mins\n        myTimeStr += \":\"\n        if (secs < 10)\n            myTimeStr = myTimeStr + \"0\" + secs\n        else\n            myTimeStr = myTimeStr + secs\n        return myTimeStr\n    }\n\n    function Obloq_connect_wifi(): void {\n        if (OBLOQ_SERIAL_INIT) {\n            if (!OBLOQ_SERIAL_INIT) {\n                Obloq_serial_init()\n            }\n            let item = \"test\"\n            obloqWriteString(\"|2|1|\" + OBLOQ_WIFI_SSID + \",\" + OBLOQ_WIFI_PASSWORD + \"|\\r\") //Send wifi account and password instructions\n            item = serial.readUntil(\"\\r\")\n            while (item.indexOf(\"|2|3|\") < 0) {\n                item = serial.readUntil(\"\\r\")\n            }\n            OBLOQ_IP = item.substr(5, item.length - 6)\n            OBLOQ_WIFI_CONNECTED = true\n            basic.showIcon(IconNames.Yes)\n        }\n\n    }\n\n\n    /**\n     * Setup Obloq Tx Rx to micro:bit pins and WIFI SSID, password.\n     * 設定Obloq的Tx、Rx連接腳位，以及WIFI的名稱及密碼\n     * @param SSID to SSID ,eg: \"yourSSID\"\n     * @param PASSWORD to PASSWORD ,eg: \"yourPASSWORD\"\n     * @param receive to receive ,eg: SerialPin.P1\n     * @param send to send ,eg: SerialPin.P2\n    */\n    //% weight=100 group=\"01_System\"\n    //% receive.fieldEditor=\"gridpicker\" receive.fieldOptions.columns=3\n    //% send.fieldEditor=\"gridpicker\" send.fieldOptions.columns=3\n    //% blockId=Obloq_WIFI_setup blockGap=5\n    //% block=\"Obloq setup WIFI | Pin set: | Receive data (green wire): %receive| Send data (blue wire): %send | Wi-Fi: | Name: %SSID| Password: %PASSWORD| Start connection\"\n    export function Obloq_WIFI_setup(/*serial*/receive: SerialPin, send: SerialPin,\n                                     /*wifi*/SSID: string, PASSWORD: string\n    ):\n        void {\n        basic.showLeds(`\n        . . . . .\n        . . . . .\n        . # # # .\n        . . . . .\n        . . . . .\n        `)\n        OBLOQ_WIFI_SSID = SSID\n        OBLOQ_WIFI_PASSWORD = PASSWORD\n        OBLOQ_SERIAL_TX = send\n        OBLOQ_SERIAL_RX = receive\n        Obloq_serial_init()\n        Obloq_connect_wifi()\n    }\n    /*\n        //% weight=99\n        //% blockId=Obloq_serial_disconnect\n        //% block=\"Obloq serial disconnect\"\n        export function Obloq_serial_disconnect(): void {\n            OBLOQ_SERIAL_INIT = false\n        }\n        //% weight=98\n        //% blockId=Obloq_serial_reconnect\n        //% block=\"Obloq serial reconnect\"\n        export function Obloq_serial_reconnect(): void {\n            Obloq_serial_init()\n        }\n    */\n    /**\n     * return the IP of your Obloq \n     * 取得Obloq的IP\n    */\n    //% weight=97 group=\"01_System\"\n    //% blockId=getObloq_IP blockGap=5\n    //% block=\"get Obloq IP address\"\n    export function getObloq_IP(): string {\n        if (OBLOQ_SERIAL_INIT && OBLOQ_WIFI_CONNECTED)\n            return OBLOQ_IP\n        else\n            return \"\"\n    }\n\n    /**\n     * return the city ID in the world \n     * 取得某個全球大都市的城市編號\n    */\n    //% weight=95 group=\"02_Weather\"\n    //% blockId=getCityID blockGap=5\n    //% block=\"get City ID of %myCity\"\n    export function getCityID(myCity: cityIDs): string {\n        return (\"\" + myCity)\n    }\n\n    /**\n     * return the city ID in Taiwan \n     * 取得台灣某個都市或是縣的城市編號\n    */\n    //% weight=94 group=\"02_Weather\"\n    //% blockId=getCity2ID blockGap=5\n    //% block=\"get City ID of %myCity | in Taiwan\"\n    export function getCity2ID(myCity: city2IDs): string {\n        return (\"\" + myCity)\n    }\n\n    /**\n     * return the weather information about the city from http://openweathermap.org/ \n     * 取得從 http://openweathermap.org/ 得到的某一項氣象資訊\n    */\n    //% weight=93 group=\"02_Weather\"\n    //% blockId=getWeatherInfo blockGap=5\n    //% block=\"get weather data: %myInfo\"\n    export function getWeatherInfo(myInfo: wType): string {\n        return wInfo[myInfo][2]\n    }\n\n    /**\n     * connect to https://openweathermap.org/ to get the weather information\n     * You have to enter the City ID and your access key of the website\n     * 連接到 https://openweathermap.org/ 取得氣象資訊\n     * 你必須輸入城市編號以及你在這個網站註冊取得的存取密碼才能查詢該城市的氣象資訊\n     * @param myID to myID ,eg: \"City Number\"\n     * @param myKey to myKey ,eg: \"access key\"\n    */\n    //% weight=96 group=\"02_Weather\"\n    //% blockId=setWeatherHttp blockGap=5\n    //% block=\"set city ID to get the weather information: %myID | OpenWeatherMap key: %myKey\"\n    export function setWeatherHttp(myID: string, myKey: string): void {\n        Obloq_serial_init()\n        basic.showLeds(`\n        . . . . .\n        . . . . .\n        . # # # .\n        . . . . .\n        . . . . .\n        `)\n        cityID = myID\n        weatherKey = myKey\n        let item = \"\"\n        let returnCode = \"\"\n        let tempNumber = 0\n        let tempStr = \"\"\n        let myUrl = \"http://api.openweathermap.org:80/data/2.5/weather?id=\" + cityID + \"&appid=\" + weatherKey\n        serial.readString()\n        obloqWriteString(\"|3|1|\" + myUrl + \"|\\r\")\n        for (let i = 0; i < 3; i++) {\n            returnCode = serial.readUntil(\"|\")\n        }\n        if (returnCode == \"200\") {\n            for (let i = 0; i < wInfo.length; i++) {\n                item = serial.readUntil(\":\")\n                while (item.indexOf(wInfo[i][1]) < 0) {\n                    item = serial.readUntil(\":\")\n                }\n                item = serial.readUntil(\",\")\n                switch (wInfo[i][3]) {\n                    case \"s\":\n                        wInfo[i][2] = item.substr(1, item.length - 2)\n                        break\n                    case \"k\":\n                        if (item.indexOf(\"}\") != -1) {\n                            item = item.substr(0, item.length - 1)\n                        }\n                        wInfo[i][2] = \"\" + Math.round(parseFloat(item) - 273.15)\n                        break\n                    case \"n\":\n                        if (item.indexOf(\"}\") != -1) {\n                            item = item.substr(0, item.length - 1)\n                        }\n                        wInfo[i][2] = item\n                        break\n                    default:\n                        wInfo[i][2] = item.substr(1, item.length - 2)\n                }\n            }\n            let riseTime = parseFloat(wInfo[7][2])\n            let setTime = parseFloat(wInfo[8][2])\n            let timeZone = parseFloat(wInfo[9][2])\n            riseTime += timeZone\n            setTime += timeZone\n            wInfo[7][2] = getTimeStr(riseTime)\n            wInfo[8][2] = getTimeStr(setTime)\n            basic.showIcon(IconNames.Yes)\n        }\n        else {\n            for (let i = 0; i < wInfo.length; i++) {\n                wInfo[i][2] = \"\"\n            }\n            basic.showIcon(IconNames.No)\n        }\n    }\n\n    /**\n     * connect to https://thingspeak.com/ to store the data from micro:bit\n     * 連接到 https://thingspeak.com/ 儲存micro:bit所得到的感應器資料\n    */\n    //% weight=92 group=\"03_ThingSpeak\"\n    //% blockId=saveToThingSpeak blockGap=5\n    //% expandableArgumentMode\"toggle\" inlineInputMode=inline\n    //% block=\"send data to ThingSpeak :| write key: %myKey field1: %field1 || field2: %field2 field3: %field3 field4: %field4 field5: %field5 field6: %field6 field7: %field7 field8: %field8\"\n    export function saveToThingSpeak(myKey: string, field1: number, field2?: number, field3?: number, field4?: number, field5?: number, field6?: number, field7?: number, field8?: number): void {\n        Obloq_serial_init()\n        basic.showLeds(`\n        . . . . .\n        . . . . .\n        . # # # .\n        . . . . .\n        . . . . .\n        `)\n        let returnCode = \"\"\n        let myArr: number[] = [field1, field2, field3, field4, field5, field6, field7, field8]\n        let myUrl = \"http://api.thingspeak.com/update?api_key=\" + myKey\n        for (let i = 0; i < myArr.length; i++) {\n            if (myArr[i] != null)\n                myUrl += \"&field\" + (i + 1) + \"=\" + myArr[i]\n            else\n                break\n        }\n        serial.readString()\n        obloqWriteString(\"|3|1|\" + myUrl + \"|\\r\")\n        for (let i = 0; i < 3; i++) {\n            returnCode = serial.readUntil(\"|\")\n        }\n        if (returnCode == \"200\")\n            basic.showIcon(IconNames.Yes)\n        else\n            basic.showIcon(IconNames.No)\n    }\n\n    /**\n     * connect to IFTTT to trig some event and notify you\n     * 連接到IFTTT觸發其他事件\n    */\n    //% weight=91 group=\"04_IFTTT\"\n    //% blockId=sendToIFTTT blockGap=5\n    //% expandableArgumentMode\"toggle\" inlineInputMode=inline\n    //% block=\"send data to IFTTT to trig other event:| event name: %eventName| your key: %myKey || value1: %value1 value2: %value2 value3: %value3\"\n    export function sendToIFTTT(eventName: string, myKey: string, value1?: string, value2?: string, value3?: string): void {\n        Obloq_serial_init()\n        basic.showLeds(`\n        . . . . .\n        . . . . .\n        . # # # .\n        . . . . .\n        . . . . .\n        `)\n        let returnCode = \"\"\n        let myArr: string[] = [value1, value2, value3]\n        let myUrl = \"http://maker.ifttt.com/trigger/\" + eventName + \"/with/key/\" + myKey + \"?\"\n        for (let i = 0; i < myArr.length; i++) {\n            if (myArr[i] != null)\n                myUrl += \"&value\" + (i + 1) + \"=\" + myArr[i]\n            else\n                break\n        }\n        serial.readString()\n        obloqWriteString(\"|3|1|\" + myUrl + \"|\\r\")\n        for (let i = 0; i < 3; i++) {\n            returnCode = serial.readUntil(\"|\")\n        }\n        if (returnCode == \"200\")\n            basic.showIcon(IconNames.Yes)\n        else\n            basic.showIcon(IconNames.No)\n    }\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":14316,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"  \"main."],[-1,"t"],[1,"block"],[0,"s\",\n    "]],"start1":184,"start2":184,"length1":17,"length2":21},{"diffs":[[0,"   \""],[-1,"README.md\"\n    ],\n    \"testFiles\": ["],[1,"main.ts\","],[0,"\n   "]],"start1":206,"start2":206,"length1":44,"length2":17},{"diffs":[[0,"   \""],[-1,"test.ts"],[1,"README.md"],[0,"\"\n  "]],"start1":225,"start2":225,"length1":15,"length2":17},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":248,"start2":248,"length1":32,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1746365346915,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Obloq_v1 with ThingSpeak\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1746365392069}